{"version":3,"file":"static/js/684.7d85d74d.chunk.js","mappings":"6KACA,MAA0B,yBAA1B,EAA2D,uB,UCE5C,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC1C,OACE,qBAASC,UAAWC,EAApB,UACGF,GAAQ,eAAIC,UAAWC,EAAf,SAAyBF,IAAc,KAC/CD,IAGN,C,6ICJc,SAASI,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,IAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,SAAC,IAAD,CAASd,MAAM,wFAAf,UACE,kBAAMC,UAAU,OAAhB,WACE,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,QAAQc,QAAQ,UACjC,kBACEd,UAAU,QACVe,KAAK,OACLX,KAAK,OACLY,GAAG,OACHC,MAAOb,EACPc,YAAY,qBACZC,SAAU,gBAAaF,EAAb,EAAGG,OAAUH,MAAb,OAA2BZ,EAAQY,EAAnC,QAGd,iBAAKjB,UAAU,eAAf,WACE,kBAAOA,UAAU,QAAQc,QAAQ,WACjC,kBACEd,UAAU,QACVe,KAAK,QACLX,KAAK,QACLY,GAAG,QACHC,MAAOX,EACPY,YAAY,QACZC,SAAU,gBAAaF,EAAb,EAAGG,OAAUH,MAAb,OAA2BV,EAASU,EAApC,QAGd,iBAAKjB,UAAU,eAAf,WACE,kBAAOA,UAAU,QAAQc,QAAQ,cACjC,kBACEd,UAAU,QACVe,KAAK,WACLX,KAAK,WACLY,GAAG,WACHC,MAAOT,EACPU,YAAY,uCACZC,SAAU,gBAAaF,EAAb,EAAGG,OAAUH,MAAb,OAA2BR,EAAYQ,EAAvC,QAGd,iBAAKjB,UAAU,eAAf,WACE,kBAAOA,UAAU,QAAQc,QAAQ,cACjC,kBACEd,UAAU,QACVe,KAAK,WACLX,KAAK,gBACLY,GAAG,gBACHC,MAAOP,EACPQ,YAAY,0GACZC,SAAU,gBAAaF,EAAb,EAAGG,OAAUH,MAAb,OAA2BN,EAAaM,EAAxC,QAGd,mBAAQjB,UAAU,SAASe,KAAK,SAASM,QAAS,SAAAC,GAAC,OApEpC,SAAAA,GAGnB,GAFAA,EAAEC,iBAEEf,IAAaE,EAAjB,CAKA,IAAMc,EAAO,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC5BI,EAASa,EAAAA,EAAAA,SAAwBD,IAEjCnB,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZE,EAAa,GARZ,MAFCe,EAAAA,EAAAA,GAAW,2GAWd,CAqD4DC,CAAaL,EAAjB,EAAnD,oFAMP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Layout/Section.module.css?d613","components/Layout/Section.jsx","views/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__cpp-W\",\"title\":\"Section_title__9535J\"};","import propTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ children, title }) {\n  return (\n    <section className={s.section}>\n      {title ? <h2 className={s.title}>{title}</h2> : null}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { warnNotify } from '../services/tostify';\nimport Section from '../components/Layout/Section';\nimport authOperations from '../redux/auth/auth-operations';\n\nexport default function RegisterView() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPass, setCheckPass] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== checkPass) {\n      warnNotify('Пароли не совпадают');\n      return;\n    }\n\n    const user = { name, email, password };\n    dispatch(authOperations.register(user));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n    setCheckPass('');\n  };\n\n  return (\n    <Section title=\"Заполните форму\">\n      <form className=\"form\">\n        <div className=\"inputWrapper\">\n          <label className=\"label\" htmlFor=\"name\"></label>\n          <input\n            className=\"input\"\n            type=\"Name\"\n            name=\"Name\"\n            id=\"name\"\n            value={name}\n            placeholder=\"имя\"\n            onChange={({ target: { value } }) => setName(value)}\n          />\n        </div>\n        <div className=\"inputWrapper\">\n          <label className=\"label\" htmlFor=\"email\"></label>\n          <input\n            className=\"input\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            placeholder=\"email\"\n            onChange={({ target: { value } }) => setEmail(value)}\n          />\n        </div>\n        <div className=\"inputWrapper\">\n          <label className=\"label\" htmlFor=\"password\"></label>\n          <input\n            className=\"input\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            placeholder=\"пароль\"\n            onChange={({ target: { value } }) => setPassword(value)}\n          />\n        </div>\n        <div className=\"inputWrapper\">\n          <label className=\"label\" htmlFor=\"password\"></label>\n          <input\n            className=\"input\"\n            type=\"password\"\n            name=\"checkPassword\"\n            id=\"checkPassword\"\n            value={checkPass}\n            placeholder=\"подтвердите пароль\"\n            onChange={({ target: { value } }) => setCheckPass(value)}\n          />\n        </div>\n        <button className=\"button\" type=\"submit\" onClick={e => handleSubmit(e)}>\n          Регистрация\n        </button>\n      </form>\n    </Section>\n  );\n}"],"names":["Section","children","title","className","s","RegisterView","useState","name","setName","email","setEmail","password","setPassword","checkPass","setCheckPass","dispatch","useDispatch","htmlFor","type","id","value","placeholder","onChange","target","onClick","e","preventDefault","user","authOperations","warnNotify","handleSubmit"],"sourceRoot":""}